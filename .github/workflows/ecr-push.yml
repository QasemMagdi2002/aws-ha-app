# .github/workflows/ecr-push.yml
name: Build, Scan & Push Docker image to ECR

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

env:
  ECR_REPOSITORY: aws-ha-app
  BUILD_CONTEXT: ./app
  DOCKERFILE_PATH: ./app/Dockerfile

jobs:
  build-scan-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" \
          || aws ecr create-repository --repository-name "$ECR_REPOSITORY"

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ---------- BUILD (no push yet) ----------
      - name: Build image (local)
        run: |
          REG="${{ steps.ecr.outputs.registry }}"
          REPO="${{ env.ECR_REPOSITORY }}"
          SHA="${GITHUB_SHA::7}"
          BRANCH="${GITHUB_REF_NAME//\//-}"
          DATE_TAG="$(date +%Y%m%d-%H%M)"

          echo "REG=$REG" >> $GITHUB_ENV
          echo "SHA_TAG=$SHA" >> $GITHUB_ENV
          echo "IMG_SHA=$REG/$REPO:$SHA" >> $GITHUB_ENV
          echo "IMG_LATEST=$REG/$REPO:latest" >> $GITHUB_ENV

          docker build \
            -t "$REG/$REPO:$SHA" \
            -t "$REG/$REPO:latest" \
            -f "$DOCKERFILE_PATH" \
            "$BUILD_CONTEXT"

      # ---------- SCAN ----------
      - name: Scan image with Trivy (warn only)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMG_SHA }}
          format: 'table'
          exit-code: '0'               # <— don’t fail
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true      

      # ---------- PUSH (only runs if scan passed) ----------
      - name: Push images to ECR
        run: |
          docker push "${{ env.IMG_SHA }}"
          docker push "${{ env.IMG_LATEST }}"

      - name: Output image URIs
        run: |
          echo "${{ env.IMG_SHA }}"
          echo "${{ env.IMG_LATEST }}"
